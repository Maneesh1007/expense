{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\expense\\\\src\\\\pages\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n//import AuthContext from \"../store/AuthContext\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AuthActions } from \"../reducers/AuthReducer\";\nimport classes from \"./Auth.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const history = useHistory(\"\");\n  const enteredEmail = useRef(\"\");\n  const enteredPassword = useRef(\"\");\n  const conformPassword = useRef(\"\");\n  //const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //const Authctx = useContext(AuthContext);\n  const isLogin = useSelector(state => state.isLogin);\n  const dispatch = useDispatch();\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    if (isLogin) {\n      setIsLoading(true);\n      const responsee = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBqVX_hW6BUUpe1061qr1J-wV_Ob4u66M4\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail.current.value,\n          password: enteredPassword.current.value,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await responsee.json();\n      //Authctx.login(data.idToken);\n      //console.log(data);\n\n      setIsLoading(false);\n      if (responsee.ok) {\n        dispatch(AuthActions.login(data.idToken));\n        history.replace(\"/expense\");\n      } else {\n        let errorMessage = \"Authenication failed\";\n        alert(errorMessage);\n      }\n    } else {\n      //Authctx.isLogged = false;\n      setIsLoading(true);\n      const response = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBqVX_hW6BUUpe1061qr1J-wV_Ob4u66M4\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail.current.value,\n          password: enteredPassword.current.value,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {} else {\n        let errorMessage = \"Authenication failed\";\n        if (data && data.error && data.error.message) {\n          errorMessage = data.error.message;\n        }\n        alert(errorMessage);\n      }\n      setIsLoading(false);\n    }\n  };\n\n  //forgot Password\n  const passwordHandler = () => {\n    history.replace(\"/forgot\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: enteredEmail,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: enteredPassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cpassword\",\n          children: \"Conform Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"cpassword\",\n          ref: conformPassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: passwordHandler,\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sending Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"K+D5bx6gsm+SjdPXH/SzK0tqJck=\", false, function () {\n  return [useHistory, useSelector, useDispatch];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["useState","useRef","useContext","useHistory","useDispatch","useSelector","AuthActions","classes","jsxDEV","_jsxDEV","Auth","_s","history","enteredEmail","enteredPassword","conformPassword","isLoading","setIsLoading","isLogin","state","dispatch","switchAuthModeHandler","setIsLogin","prevState","submitHandler","e","preventDefault","responsee","fetch","method","body","JSON","stringify","email","current","value","password","returnSecureToken","headers","data","json","ok","login","idToken","replace","errorMessage","alert","response","error","message","passwordHandler","className","auth","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","control","htmlFor","type","id","ref","required","onClick","actions","toggle","_c","$RefreshReg$"],"sources":["C:/Users/hp/expense/src/pages/Auth.js"],"sourcesContent":["import { useState, useRef, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import AuthContext from \"../store/AuthContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AuthActions } from \"../reducers/AuthReducer\";\r\n\r\nimport classes from \"./Auth.module.css\";\r\n\r\nconst Auth = () => {\r\n  const history = useHistory(\"\");\r\n  const enteredEmail = useRef(\"\");\r\n  const enteredPassword = useRef(\"\");\r\n  const conformPassword = useRef(\"\");\r\n  //const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //const Authctx = useContext(AuthContext);\r\n  const isLogin = useSelector((state) => state.isLogin);\r\n  const dispatch = useDispatch();\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n      const responsee = await fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBqVX_hW6BUUpe1061qr1J-wV_Ob4u66M4\",\r\n\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: enteredEmail.current.value,\r\n            password: enteredPassword.current.value,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await responsee.json();\r\n      //Authctx.login(data.idToken);\r\n      //console.log(data);\r\n\r\n      setIsLoading(false);\r\n      if (responsee.ok) {\r\n        dispatch(AuthActions.login(data.idToken));\r\n        history.replace(\"/expense\");\r\n      } else {\r\n        let errorMessage = \"Authenication failed\";\r\n        alert(errorMessage);\r\n      }\r\n    } else {\r\n      //Authctx.isLogged = false;\r\n      setIsLoading(true);\r\n      const response = await fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBqVX_hW6BUUpe1061qr1J-wV_Ob4u66M4\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: enteredEmail.current.value,\r\n            password: enteredPassword.current.value,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n      } else {\r\n        let errorMessage = \"Authenication failed\";\r\n        if (data && data.error && data.error.message) {\r\n          errorMessage = data.error.message;\r\n        }\r\n        alert(errorMessage);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  //forgot Password\r\n  const passwordHandler = () => {\r\n    history.replace(\"/forgot\");\r\n  };\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      {<h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>}\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input type=\"email\" id=\"email\" ref={enteredEmail} required />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input type=\"password\" id=\"password\" ref={enteredPassword} required />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"cpassword\">Conform Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"cpassword\"\r\n            ref={conformPassword}\r\n            required\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <button onClick={passwordHandler}>Forgot Password?</button>\r\n        </div>\r\n\r\n        <div className={classes.actions}>\r\n          {!isLoading && (\r\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n          )}\r\n          {isLoading && <h1>Sending Request</h1>}\r\n          <button\r\n            type=\"button\"\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}