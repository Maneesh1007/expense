[{"C:\\Users\\hp\\expense\\src\\index.js":"1","C:\\Users\\hp\\expense\\src\\App.js":"2","C:\\Users\\hp\\expense\\src\\reportWebVitals.js":"3","C:\\Users\\hp\\expense\\src\\pages\\Auth.js":"4","C:\\Users\\hp\\expense\\src\\pages\\Home.js":"5","C:\\Users\\hp\\expense\\src\\pages\\CompleteProfile.js":"6","C:\\Users\\hp\\expense\\src\\store\\AuthContext.js":"7","C:\\Users\\hp\\expense\\src\\components\\ForgotPassword.js":"8","C:\\Users\\hp\\expense\\src\\components\\ExpenseTracker.js":"9","C:\\Users\\hp\\expense\\src\\components\\Display.js":"10","C:\\Users\\hp\\expense\\src\\reducers\\AuthReducer.js":"11"},{"size":763,"mtime":1693377535914,"results":"12","hashOfConfig":"13"},{"size":855,"mtime":1693281425293,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1693116938922,"results":"15","hashOfConfig":"13"},{"size":4251,"mtime":1693377885095,"results":"16","hashOfConfig":"13"},{"size":1075,"mtime":1693196933390,"results":"17","hashOfConfig":"13"},{"size":2711,"mtime":1693203467086,"results":"18","hashOfConfig":"13"},{"size":1352,"mtime":1693203385470,"results":"19","hashOfConfig":"13"},{"size":1369,"mtime":1693277797357,"results":"20","hashOfConfig":"13"},{"size":1714,"mtime":1693324832168,"results":"21","hashOfConfig":"13"},{"size":1116,"mtime":1693326929300,"results":"22","hashOfConfig":"13"},{"size":687,"mtime":1693378276502,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k2c4yk",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hp\\expense\\src\\index.js",[],[],"C:\\Users\\hp\\expense\\src\\App.js",[],[],[],"C:\\Users\\hp\\expense\\src\\reportWebVitals.js",[],[],"C:\\Users\\hp\\expense\\src\\pages\\Auth.js",["61","62"],[],"C:\\Users\\hp\\expense\\src\\pages\\Home.js",[],[],"C:\\Users\\hp\\expense\\src\\pages\\CompleteProfile.js",["63"],[],"import { useContext, useRef, useEffect, useState } from \"react\";\r\nimport AuthContext from \"../store/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CompleteProfile = () => {\r\n  const Authctx = useContext(AuthContext);\r\n  const nameRef = useRef(\"\");\r\n  const profilePhotoRef = useRef(\"\");\r\n  const [profileData, setProfileData] = useState({});\r\n  const history = useHistory(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchProfileData = async () => {\r\n      const response = await fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=AIzaSyBqVX_hW6BUUpe1061qr1J-wV_Ob4u66M4\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            idToken: Authctx.token,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        console.log(\"Error fetching profile data\");\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setProfileData(data); // Set the profile data in the state\r\n    };\r\n\r\n    fetchProfileData();\r\n  }, [Authctx.token]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBqVX_hW6BUUpe1061qr1J-wV_Ob4u66M4\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          idToken: Authctx.token,\r\n          displayName: nameRef.current.value,\r\n          photoUrl: profilePhotoRef.current.value,\r\n          deleteAttribute: [],\r\n          returnSecureToken: true,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n  };\r\n  const logoutHandler = () => {\r\n    Authctx.logout();\r\n    history.replace(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"justify-content-center\">\r\n        <h1>Contact Details</h1>\r\n        <div className=\"justify-content-end\">\r\n          <button onClick={logoutHandler}>Logout</button>\r\n        </div>\r\n        <button>Close</button>\r\n      </div>\r\n      <form onSubmit={submitHandler}>\r\n        <label>Full Name</label>\r\n        <input\r\n          type=\"text\"\r\n          ref={nameRef}\r\n          required\r\n          defaultValue={profileData.displayName || \"h\"}\r\n        ></input>\r\n        <label>Profile Photo Url</label>\r\n        <input\r\n          type=\"text\"\r\n          ref={profilePhotoRef}\r\n          required\r\n          defaultValue={profileData.photoUrl || \"h\"}\r\n        ></input>\r\n        <button type=\"submit\">Update</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompleteProfile;\r\n","C:\\Users\\hp\\expense\\src\\store\\AuthContext.js",["64"],[],"import React, { createContext, useState, useEffect } from \"react\";\r\n//import jwtDecode from \"jwt-decode\";\r\n\r\nconst AuthContext = createContext({\r\n  token: \"\",\r\n  isLogged: false,\r\n  loginHandler: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const initialToken = localStorage.getItem(\"token\");\r\n  const [token, setToken] = useState(initialToken);\r\n  //const [tokenExpiration, setTokenExpiration] = useState(null);\r\n\r\n  const isLogged = !!token;\r\n\r\n  const loginHandler = (token) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    //const decodedToken = jwtDecode(token);\r\n    //setTokenExpiration(decodedToken.exp * 1000); // Convert seconds to milliseconds\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(\"\");\r\n    //setTokenExpiration(null);\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  // useEffect(() => {\r\n  // if (tokenExpiration) {\r\n  // const currentTime = new Date().getTime();\r\n  //if (currentTime > tokenExpiration) {\r\n  //  logout();\r\n  // }\r\n  // }\r\n  // }, [tokenExpiration]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLogged: isLogged,\r\n    login: loginHandler,\r\n    logout: logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","C:\\Users\\hp\\expense\\src\\components\\ForgotPassword.js",[],[],"C:\\Users\\hp\\expense\\src\\components\\ExpenseTracker.js",[],[],"C:\\Users\\hp\\expense\\src\\components\\Display.js",["65"],[],"//import { useState } from \"react\"\r\n\r\nconst Display = (props) => {\r\n  const deleteHandler = async (itemName) => {\r\n    const response = await fetch(\r\n      `https://expense-tracker-bef01-default-rtdb.firebaseio.com/expenses/${itemName}.json`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n    const updatedItems = props.items.filter((item) => item.name !== itemName);\r\n    props.setItems(updatedItems);\r\n  };\r\n  const editHandler = async (itemName) => {\r\n    const response = await fetch(\r\n      `https://expense-tracker-bef01-default-rtdb.firebaseio.com/expenses/${itemName}.json`,\r\n      {\r\n        method: \"PUT\",\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div>\r\n      {props.items.map((item, index) => (\r\n        <div key={index}>\r\n          <h1>\r\n            {item.amount} {item.desc} {item.category}\r\n          </h1>\r\n          <button onClick={() => editHandler(item.name)}>Edit</button>\r\n          <button onClick={() => deleteHandler(item.name)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Display;\r\n","C:\\Users\\hp\\expense\\src\\reducers\\AuthReducer.js",[],[],{"ruleId":"66","severity":1,"message":"67","line":1,"column":28,"nodeType":"68","messageId":"69","endLine":1,"endColumn":38},{"ruleId":"66","severity":1,"message":"70","line":18,"column":9,"nodeType":"68","messageId":"69","endLine":18,"endColumn":18},{"ruleId":"66","severity":1,"message":"71","line":60,"column":11,"nodeType":"68","messageId":"69","endLine":60,"endColumn":15},{"ruleId":"66","severity":1,"message":"72","line":1,"column":42,"nodeType":"68","messageId":"69","endLine":1,"endColumn":51},{"ruleId":"66","severity":1,"message":"73","line":5,"column":11,"nodeType":"68","messageId":"69","endLine":5,"endColumn":19},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'isLogedin' is assigned a value but never used.","'data' is assigned a value but never used.","'useEffect' is defined but never used.","'response' is assigned a value but never used."]